{"version":3,"file":"static/js/604.91cb7aef.chunk.js","mappings":"wJAkDA,UA1C4B,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAC3B,GAA0BC,EAAAA,EAAAA,MAAZC,GAAd,EAAOC,MAAP,EAAcD,UA+Bd,OACI,gBACAE,UAAU,kKACNC,QAhCc,WAClB,GAAoB,kBAAVL,EACN,OAAOA,GACH,IAAK,IAID,YAHAE,EAAS,CACLI,KAAMC,EAAAA,EAAAA,QAId,IAAK,KAID,YAHAL,EAAS,CACLI,KAAMC,EAAAA,EAAAA,YAId,IAAK,KAID,YAHAL,EAAS,CACLI,KAAMC,EAAAA,EAAAA,QAMtBL,EAAS,CACLI,KAAMC,EAAAA,EAAAA,MACNC,QAASR,KAKb,SAIKA","sources":["components/calculator/button.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useCalculatorContext, Operator } from './calculatorContext';\nimport { CalculatorActionType } from './calculatorReducer';\n\ninterface IButton {\n    value: number | Operator;\n}\n\nconst Button: FC<IButton> = ({ value }) => {\n    const {state, dispatch} = useCalculatorContext();\n\n    const buttonClicked = () => {\n        if(typeof value !== 'number') {\n            switch(value) {\n                case '=':\n                    dispatch({\n                        type: CalculatorActionType.EQUAL\n                    })\n                    return;\n\n                case '<-':\n                    dispatch({\n                        type: CalculatorActionType.BACKSPACE\n                    })\n                    return;\n\n                case 'AC':\n                    dispatch({\n                        type: CalculatorActionType.CLEAR\n                    })\n                    return;\n            }\n        }\n\n        dispatch({\n            type: CalculatorActionType.ENTRY,\n            payload: value\n        });\n    }\n\n    return (\n        <div \n        className=\"w-16 h-16 my-2 rounded-full flex justify-center items-center bg-orange-600 text-white hover:cursor-pointer hover:bg-orange-400 transition duration-500 text-2xl\"\n            onClick={buttonClicked}\n        >\n            {value}\n        </div>\n    )\n}\n\nexport default Button;"],"names":["value","useCalculatorContext","dispatch","state","className","onClick","type","CalculatorActionType","payload"],"sourceRoot":""}