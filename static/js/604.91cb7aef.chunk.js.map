{"version":3,"file":"static/js/604.91cb7aef.chunk.js","mappings":"wJAkDA,UA1C4B,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAC3B,GAA0BC,EAAAA,EAAAA,MAAZC,GAAd,EAAOC,MAAP,EAAcD,UA+Bd,OACI,gBACAE,UAAU,kKACNC,QAhCc,WAClB,GAAoB,kBAAVL,EACN,OAAOA,GACH,IAAK,IAID,YAHAE,EAAS,CACLI,KAAMC,EAAAA,EAAAA,QAId,IAAK,KAID,YAHAL,EAAS,CACLI,KAAMC,EAAAA,EAAAA,YAId,IAAK,KAID,YAHAL,EAAS,CACLI,KAAMC,EAAAA,EAAAA,QAMtBL,EAAS,CACLI,KAAMC,EAAAA,EAAAA,MACNC,QAASR,KAKb,SAIKA","sources":["components/calculator/button.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { useCalculatorContext, Operator } from './calculatorContext';\r\nimport { CalculatorActionType } from './calculatorReducer';\r\n\r\ninterface IButton {\r\n    value: number | Operator;\r\n}\r\n\r\nconst Button: FC<IButton> = ({ value }) => {\r\n    const {state, dispatch} = useCalculatorContext();\r\n\r\n    const buttonClicked = () => {\r\n        if(typeof value !== 'number') {\r\n            switch(value) {\r\n                case '=':\r\n                    dispatch({\r\n                        type: CalculatorActionType.EQUAL\r\n                    })\r\n                    return;\r\n\r\n                case '<-':\r\n                    dispatch({\r\n                        type: CalculatorActionType.BACKSPACE\r\n                    })\r\n                    return;\r\n\r\n                case 'AC':\r\n                    dispatch({\r\n                        type: CalculatorActionType.CLEAR\r\n                    })\r\n                    return;\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: CalculatorActionType.ENTRY,\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div \r\n        className=\"w-16 h-16 my-2 rounded-full flex justify-center items-center bg-orange-600 text-white hover:cursor-pointer hover:bg-orange-400 transition duration-500 text-2xl\"\r\n            onClick={buttonClicked}\r\n        >\r\n            {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;"],"names":["value","useCalculatorContext","dispatch","state","className","onClick","type","CalculatorActionType","payload"],"sourceRoot":""}